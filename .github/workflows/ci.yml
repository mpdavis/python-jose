name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  test:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11",  "3.12", "3.13", "pypy3.9"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: macos-latest
            python-version:  "pypy3.9"          
          - os: windows-latest
            python-version:  "pypy3.9"
    runs-on: ${{ matrix.os }}
    name: "${{ matrix.os }} Python: ${{ matrix.python-version }}"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -U "pip>=25.1.1"
        pip install -U "tox-gh-actions==3.3.0" coverage
    - name: Log python & pip versions
      run: |
        python --version
        pip --version
    - name: Run unit tests
      run: tox
    - name: Coverage report
      run:  coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        pip install -U setuptools 
        pip install -U "tox>=4.26.0,<5"
    - run: tox -e lint
  package:
    name: Build & verify package
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install build, check-wheel-content, and twine
        run: "python -m pip install build twine check-wheel-contents"
      - name: Build package
        run: "python -m build --sdist --wheel ."
      - name: List result
        run: "ls -l dist"
      - name: Check wheel contents
        run: "check-wheel-contents dist/*.whl"
      - name: Check long_description
        run: "python -m twine check dist/*"
